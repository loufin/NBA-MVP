}
}
for(i in 1:length(voting.df$Tm)){
if(voting.df$Tm[i] == "TOT"){
append(row_count, "i")
print(voting.df$Year[i])
print(voting.df$Name[i])
}
}
for(i in 1:length(voting.df$Tm)){
if(voting.df$Tm[i] == "TOT"){
row_count <- c(row_count, i)
print(voting.df$Year[i])
print(voting.df$Name[i])
}
}
grep("Chauncey Billups", player_data.df$name_common)
# those are all the players that have the team names of "total"
# and we have a vector to keep track of those rows
for( i in 1:length(row_count)){
player_rows <- grep(voting.df$PlayerID[i], player_data.df$player_id)
for( j in 1:length(player_rows)){
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[i]) && (player_data.df$type[player_rows[j]] == "PO") )
{
voting.df$Tm[i] <- player_data.df$team_id[player_rows[j]]
}
}
}
voting.df <- read.csv("mvp_voting.csv")
# split the Player column to two columns, their full name and Basketballreference playerID
for (i in 1:length(voting.df$Player)){
a <- unlist(strsplit(voting.df$Player[i], ".", fixed = TRUE))
voting.df$Name[i] = a[1]
voting.df$PlayerID[i] = a[2]
}
#now remove the Player column
voting.df <- voting.df[,-c(2)]
# now we have a baseline
# let's add in the season win totals for teams
team_wins.df <- read.csv("nba_season_franchise_wins.csv")
team_win_percent.df <- team_wins.df
# iterate through each of the rows
for( i in 1:length(team_win_percent.df$TotalGames)){
totalGames <- team_win_percent.df$TotalGames[i]
#iterate through each of the team columns
for(j in 4:34){
team_win_percent.df[i,j] <- team_win_percent.df[i,j]/totalGames
}
}
# two franchises changed names/cities, so need to makes sure their abbreviations are accounted for
team_win_percent.df$CHA <- team_win_percent.df$CHO
team_win_percent.df$NOH <- team_win_percent.df$NOP
row_count <-c()
# some players have multiple teams, and are listed as TOT -> need to find the second team they played for players_tot <- c()
player_data.df <- read.csv("nba-data-historical.csv")
for(i in 1:length(voting.df$Tm)){
if(voting.df$Tm[i] == "TOT"){
row_count <- c(row_count, i)
print(voting.df$Year[i])
print(voting.df$Name[i])
}
}
# those are all the players that have the team names of "total"
# and we have a vector to keep track of those rows
for( i in 1:length(row_count)){
player_rows <- grep(voting.df$PlayerID[i], player_data.df$player_id)
for( j in 1:length(player_rows)){
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[i]) && (player_data.df$type[player_rows[j]] == "PO") )
{
print("changed ",voting.df$Name[i]," ", voting.df$Year[i], " ", voting.df$Tm[i], " to ", player_data.df$team_id[player_rows[j]])
voting.df$Tm[i] <- player_data.df$team_id[player_rows[j]]
}
}
}
# those are all the players that have the team names of "total"
# and we have a vector to keep track of those rows
for( i in 1:length(row_count)){
player_rows <- grep(voting.df$PlayerID[i], player_data.df$player_id)
for( j in 1:length(player_rows)){
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[i]) && (player_data.df$type[player_rows[j]] == "PO") )
{
#print("changed ",voting.df$Name[i]," ", voting.df$Year[i], " ", voting.df$Tm[i], " to ", player_data.df$team_id[player_rows[j]])
print(voting.df$Name[i])
print(voting.df$Year[i])
print(player_data.df$type[player_rows[j]])
voting.df$Tm[i] <- player_data.df$team_id[player_rows[j]]
}
}
}
# those are all the players that have the team names of "total"
# and we have a vector to keep track of those rows
for( i in 1:length(row_count)){
player_rows <- grep(voting.df$PlayerID[row_count[i]], player_data.df$player_id)
for( j in 1:length(player_rows)){
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[i]) && (player_data.df$type[player_rows[j]] == "PO") )
{
#print("changed ",voting.df$Name[i]," ", voting.df$Year[i], " ", voting.df$Tm[i], " to ", player_data.df$team_id[player_rows[j]])
print(voting.df$Name[row_count[i]])
print(voting.df$Year[row_count[i]])
print(player_data.df$type[player_rows[j]])
voting.df$Tm[row_count[i]] <- player_data.df$team_id[player_rows[j]]
}
}
}
grep(voting.df$PlayerID[row_count[1]]
, player_data.df$player_id)
# those are all the players that have the team names of "total"
# and we have a vector to keep track of those rows
for( i in 1:length(row_count)){
player_rows <- grep(voting.df$PlayerID[row_count[i]], player_data.df$player_id)
for( j in 1:length(player_rows)){
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[row_count[i]]) && (player_data.df$type[player_rows[j]] == "PO") )
{
#print("changed ",voting.df$Name[i]," ", voting.df$Year[i], " ", voting.df$Tm[i], " to ", player_data.df$team_id[player_rows[j]])
print(voting.df$Name[row_count[i]])
print(voting.df$Year[row_count[i]])
print(player_data.df$type[player_rows[j]])
voting.df$Tm[row_count[i]] <- player_data.df$team_id[player_rows[j]]
}
}
}
voting.df <- read.csv("mvp_voting.csv")
# split the Player column to two columns, their full name and Basketballreference playerID
for (i in 1:length(voting.df$Player)){
a <- unlist(strsplit(voting.df$Player[i], ".", fixed = TRUE))
voting.df$Name[i] = a[1]
voting.df$PlayerID[i] = a[2]
}
#now remove the Player column
voting.df <- voting.df[,-c(2)]
# now we have a baseline
# let's add in the season win totals for teams
team_wins.df <- read.csv("nba_season_franchise_wins.csv")
team_win_percent.df <- team_wins.df
# iterate through each of the rows
for( i in 1:length(team_win_percent.df$TotalGames)){
totalGames <- team_win_percent.df$TotalGames[i]
#iterate through each of the team columns
for(j in 4:34){
team_win_percent.df[i,j] <- team_win_percent.df[i,j]/totalGames
}
}
# two franchises changed names/cities, so need to makes sure their abbreviations are accounted for
team_win_percent.df$CHA <- team_win_percent.df$CHO
team_win_percent.df$NOH <- team_win_percent.df$NOP
row_count <-c()
# some players have multiple teams, and are listed as TOT -> need to find the second team they played for players_tot <- c()
player_data.df <- read.csv("nba-data-historical.csv")
for(i in 1:length(voting.df$Tm)){
if(voting.df$Tm[i] == "TOT"){
row_count <- c(row_count, i)
print(voting.df$Year[i])
print(voting.df$Name[i])
}
}
# those are all the players that have the team names of "total"
# and we have a vector to keep track of those rows
for( i in 1:length(row_count)){
player_rows <- grep(voting.df$PlayerID[row_count[i]], player_data.df$player_id)
for( j in 1:length(player_rows)){
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[row_count[i]]) && (player_data.df$type[player_rows[j]] == "RS") )
{
#print("changed ",voting.df$Name[i]," ", voting.df$Year[i], " ", voting.df$Tm[i], " to ", player_data.df$team_id[player_rows[j]])
print(voting.df$Name[row_count[i]])
print(voting.df$Year[row_count[i]])
print(voting.df$Tm[row_count[i]])
print(player_data.df$team_id[player_rows[j]])
voting.df$Tm[row_count[i]] <- player_data.df$team_id[player_rows[j]]
}
}
}
voting.df <- read.csv("mvp_voting.csv")
# split the Player column to two columns, their full name and Basketballreference playerID
for (i in 1:length(voting.df$Player)){
a <- unlist(strsplit(voting.df$Player[i], ".", fixed = TRUE))
voting.df$Name[i] = a[1]
voting.df$PlayerID[i] = a[2]
}
#now remove the Player column
voting.df <- voting.df[,-c(2)]
# now we have a baseline
# let's add in the season win totals for teams
team_wins.df <- read.csv("nba_season_franchise_wins.csv")
team_win_percent.df <- team_wins.df
# iterate through each of the rows
for( i in 1:length(team_win_percent.df$TotalGames)){
totalGames <- team_win_percent.df$TotalGames[i]
#iterate through each of the team columns
for(j in 4:34){
team_win_percent.df[i,j] <- team_win_percent.df[i,j]/totalGames
}
}
# two franchises changed names/cities, so need to makes sure their abbreviations are accounted for
team_win_percent.df$CHA <- team_win_percent.df$CHO
team_win_percent.df$NOH <- team_win_percent.df$NOP
row_count <-c()
# some players have multiple teams, and are listed as TOT -> need to find the second team they played for players_tot <- c()
player_data.df <- read.csv("nba-data-historical.csv")
for(i in 1:length(voting.df$Tm)){
if(voting.df$Tm[i] == "TOT"){
row_count <- c(row_count, i)
print(voting.df$Year[i])
print(voting.df$Name[i])
}
}
# those are all the players that have the team names of "total"
# and we have a vector to keep track of those rows
for( i in 1:length(row_count)){
player_rows <- grep(voting.df$PlayerID[row_count[i]], player_data.df$player_id)
for( j in 1:length(player_rows)){
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[row_count[i]]) && (player_data.df$type[player_rows[j]] == "RS") )
{
if(voting.df$Tm == "TOT"){
#print("changed ",voting.df$Name[i]," ", voting.df$Year[i], " ", voting.df$Tm[i], " to ", player_data.df$team_id[player_rows[j]])
print(voting.df$Name[row_count[i]])
print(voting.df$Year[row_count[i]])
print(voting.df$Tm[row_count[i]])
print(player_data.df$team_id[player_rows[j]])
voting.df$Tm[row_count[i]] <- player_data.df$team_id[player_rows[j]]
}
}
}
}
# those are all the players that have the team names of "total"
# and we have a vector to keep track of those rows
for( i in 1:length(row_count)){
player_rows <- grep(voting.df$PlayerID[row_count[i]], player_data.df$player_id)
for( j in 1:length(player_rows)){
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[row_count[i]]) && (player_data.df$type[player_rows[j]] == "RS") )
{
if(voting.df$Tm[row_count[i]] == "TOT"){
#print("changed ",voting.df$Name[i]," ", voting.df$Year[i], " ", voting.df$Tm[i], " to ", player_data.df$team_id[player_rows[j]])
print(voting.df$Name[row_count[i]])
print(voting.df$Year[row_count[i]])
print(voting.df$Tm[row_count[i]])
print(player_data.df$team_id[player_rows[j]])
voting.df$Tm[row_count[i]] <- player_data.df$team_id[player_rows[j]]
}
}
}
}
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
team_win_percent.df$SEA <- team_win_percent.df$OKC
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
team_win_percent.df$NJN <- team_win_percent.df$BKN
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
voting.df <- read.csv("mvp_voting.csv")
# split the Player column to two columns, their full name and Basketballreference playerID
for (i in 1:length(voting.df$Player)){
a <- unlist(strsplit(voting.df$Player[i], ".", fixed = TRUE))
voting.df$Name[i] = a[1]
voting.df$PlayerID[i] = a[2]
}
#now remove the Player column
voting.df <- voting.df[,-c(2)]
# now we have a baseline
# let's add in the season win totals for teams
team_wins.df <- read.csv("nba_season_franchise_wins.csv")
team_win_percent.df <- team_wins.df
# iterate through each of the rows
for( i in 1:length(team_win_percent.df$TotalGames)){
totalGames <- team_win_percent.df$TotalGames[i]
#iterate through each of the team columns
for(j in 4:34){
team_win_percent.df[i,j] <- team_win_percent.df[i,j]/totalGames
}
}
# three franchises changed names/cities, so need to makes sure their abbreviations are accounted for
team_win_percent.df$CHA <- team_win_percent.df$CHO
team_win_percent.df$NOH <- team_win_percent.df$NOP
team_win_percent.df$SEA <- team_win_percent.df$OKC
team_win_percent.df$NJN <- team_win_percent.df$BKN
row_count <-c()
# some players have multiple teams, and are listed as TOT -> need to find the second team they played for players_tot <- c()
player_data.df <- read.csv("nba-data-historical.csv")
for(i in 1:length(voting.df$Tm)){
if(voting.df$Tm[i] == "TOT"){
row_count <- c(row_count, i)
print(voting.df$Year[i])
print(voting.df$Name[i])
}
}
# those are all the players that have the team names of "total"
# and we have a vector to keep track of those rows
for( i in 1:length(row_count)){
player_rows <- grep(voting.df$PlayerID[row_count[i]], player_data.df$player_id)
for( j in 1:length(player_rows)){
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[row_count[i]]) && (player_data.df$type[player_rows[j]] == "RS") )
{
if(voting.df$Tm[row_count[i]] == "TOT"){
#print("changed ",voting.df$Name[i]," ", voting.df$Year[i], " ", voting.df$Tm[i], " to ", player_data.df$team_id[player_rows[j]])
print(voting.df$Name[row_count[i]])
print(voting.df$Year[row_count[i]])
print(voting.df$Tm[row_count[i]])
print(player_data.df$team_id[player_rows[j]])
voting.df$Tm[row_count[i]] <- player_data.df$team_id[player_rows[j]]
}
}
}
}
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
View(team_win_percent.df)
team_win_percent.df$NJN <- team_win_percent.df$BRK
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
team_win_percent.df$CHH <- team_win_percent.df$CHO
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
team_win_percent.df$WSB <- team_win_percent.df$WAS
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
team_win_percent.df$SDC <- team_win_percent.df$LAC
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
team_win_percent.df$KCK <- team_win_percent.df$SAC
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
View(player_data.df)
setwd("C:/Users/louis/Desktop/Projects/NBA MVP")
voting.df <- read.csv("mvp_voting.csv")
# split the Player column to two columns, their full name and Basketballreference playerID
for (player_index in 1:length(voting.df$Player)){
a <- unlist(strsplit(voting.df$Player[player_index], ".", fixed = TRUE))
voting.df$Name[player_index] = a[1]
voting.df$PlayerID[player_index] = a[2]
}
#now remove the Player column, it is now unnecessary
voting.df <- voting.df[,-c(2)]
# now we have a baseline
# let's add in the season win totals for teams
team_wins.df <- read.csv("nba_season_franchise_wins.csv")
team_win_percent.df <- team_wins.df
# iterate through each of the rows
for(season in 1:length(team_win_percent.df$TotalGames)){
totalGames <- team_win_percent.df$TotalGames[season]
#iterate through each of the team columns
for(team in 4:34){
team_win_percent.df[season,team] <- team_win_percent.df[season,team]/totalGames
}
}
# three franchises changed names/cities, so need to makes sure their abbreviations are accounted for
team_win_percent.df$CHA <- team_win_percent.df$CHO
team_win_percent.df$CHH <- team_win_percent.df$CHO
team_win_percent.df$NOH <- team_win_percent.df$NOP
team_win_percent.df$SEA <- team_win_percent.df$OKC
team_win_percent.df$NJN <- team_win_percent.df$BRK
team_win_percent.df$WSB <- team_win_percent.df$WAS
team_win_percent.df$SDC <- team_win_percent.df$LAC
team_win_percent.df$KCK <- team_win_percent.df$SAC
row_count <-c()
# some players have multiple teams, and are listed as TOT -> need to find the second team they played for players_tot <- c()
player_data.df <- read.csv("nba-data-historical.csv")
for(i in 1:length(voting.df$Tm)){
if(voting.df$Tm[i] == "TOT"){
row_count <- c(row_count, i)
print(voting.df$Year[i])
print(voting.df$Name[i])
}
}
# those are all the players that have the team names of "total"
# and we have a vector to keep track of those rows
for( i in 1:length(row_count)){
player_rows <- grep(voting.df$PlayerID[row_count[i]], player_data.df$player_id)
for( j in 1:length(player_rows)){
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[row_count[i]]) && (player_data.df$type[player_rows[j]] == "RS") )
{
if(voting.df$Tm[row_count[i]] == "TOT"){
#print("changed ",voting.df$Name[i]," ", voting.df$Year[i], " ", voting.df$Tm[i], " to ", player_data.df$team_id[player_rows[j]])
print(voting.df$Name[row_count[i]])
print(voting.df$Year[row_count[i]])
print(voting.df$Tm[row_count[i]])
print(player_data.df$team_id[player_rows[j]])
voting.df$Tm[row_count[i]] <- player_data.df$team_id[player_rows[j]]
}
}
}
}
# now we need to add in the team win pct to each of those games
for(i in 1:length(voting.df$PlayerID)){
team <- voting.df[i,3]
year <- voting.df[i,20]
col <- grep(team, colnames(team_win_percent.df))
row <- grep(year, team_win_percent.df$Season)
voting.df$winPct[i] <- team_win_percent.df[row, col]
}
# add in percent of games played for each player
i = 0
for(i in 1:length(voting.df$PlayerID)){
year <- grep(voting.df$Year[i], team_wins.df$Season)
voting.df$pctGamesPlayed[i] <- (voting.df$G[i])/team_wins.df$TotalGames[year]
# because of COVID, teams had a variable amount of games played in the year 2020
# so some players played more games than other players, meaning they played over 100% of games
# so we need to adjust by just setting the percent of games played to 100%
if(voting.df$pctGamesPlayed[i] > 1) voting.df$pctGamesPlayed[i] <- 1
}
# LETS ADD EVEN MORE DATA, THROW THE KITCHEN SINK AT THE PROBLEM
# We can always, and will, take it out later
# we're going to be adding in a bunch of advanced analytic metrics
for( i in 1:length(voting.df$PlayerID)){
# Grab every season of a player's career, store rows in a vector
player_rows <- grep(voting.df$PlayerID[i], player_data.df$player_id)
# iterate through every season of a player
for( j in 1:length(player_rows)){
# if they years match up, and it is regular season statistics
if ((player_data.df$year_id[player_rows[j]] == voting.df$Year[i]) && (player_data.df$type[player_rows[j]] == "RS") )
{
voting.df$TS[i] <- player_data.df$TS.[player_rows[j]]
voting.df$raptorO[i] <- player_data.df$Raptor.O[player_rows[j]]
voting.df$raptorD[i] <- player_data.df$Raptor.D[player_rows[j]]
voting.df$raptorPM[i] <- player_data.df$Raptor...[player_rows[j]]
voting.df$raptorWAR[i] <- player_data.df$Raptor.WAR[player_rows[j]]
voting.df$USG[i] <- player_data.df$USG.[player_rows[j]]
}
}
}
# add in a binary win column called MVP
voting.df$MVP <- voting.df$Rank
voting.df$MVP[voting.df$MVP>1] <- 0
#Need to rearrange columns in order to have a more usefil dataframe to look at
#  new order 21,22, 20,1,31,4,5,6,7,2,3,8,23,24,9,10:19,25:30
voting.df <-voting.df[,c(21,22, 20,1,31,4,5,6,7,2,3,8,23,24,9,10:19,25:30)]
#let's create a winners df
winners.df <- data.frame(matrix(0, ncol = length(colnames(voting.df))))
colnames(winners.df)<- colnames(voting.df)
winners.df <- winners.df[-c(1),]
#let's create a losers df
losers.df <- data.frame(matrix(0, ncol = length(colnames(voting.df))))
colnames(losers.df)<- colnames(voting.df)
losers.df <- losers.df[-c(1),]
# add rows from original df to this df
for(i in 1:length(voting.df$PlayerID)){
if(voting.df$Rank[i] == 1) {
winners.df <- rbind(winners.df, voting.df[i,])
}
else {
losers.df <- rbind(losers.df, voting.df[i,])
}
}
# want to export data now to look at with a visualizing tool
# I will use PowerBI
voting.num.df <- voting.df[,c(4,5,9,10,13:31)]
library(gplots)
# heatmap with values
heatmap.2(cor(voting.num.df), Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = round(cor(voting.num.df),2),
notecol = "black", key = FALSE, trace = 'none', margins = c(10,10))
