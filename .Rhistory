year <- grep(valid.df$Year[0], team_wins.df$Season)
year <- grep(valid.df$Year[0], year)
View(valid.df)
year <- grep(valid.df$Year, year.valid.index[0])
# create empty df for test
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
valid.results.df <- data.frame(row.names = seq(1,length(valid.df$PlayerID),1))
for(season in 1:length(year.valid.index)){
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- temp.results.df[order(log_reg)]
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
}
for(season in 1:length(year.valid.index)){
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- temp.results.df[order(log_reg)]
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
}
for(season in 1:length(year.valid.index)){
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- temp.results.df[order(temp.results.df$log_reg)]
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
}
for(season in 1:length(year.valid.index)){
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- order(temp.results.df$log_reg)
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
}
for(season in 1:length(year.valid.index)){
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- data.frame(order(temp.results.df$log_reg))
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
}
# Split Train test
voting.df <- read.csv("ExportedDataFrames\\total.csv")
voting.org.df <- voting.df
voting.df[is.na(voting.df)] <- 0
voting.df$MVP <- as.factor(voting.df$MVP)
# create a dataframe where the only predictive value is MVP binary
voting.df <- voting.df[,-c(25:29)]
year <- seq(1980, 2020, 1)
year.train.index <- sample(year, 0.8*length(year))
year.valid.index <- setdiff(year, year.train.index)
train.df <- data.frame(matrix(0, ncol = length(colnames(voting.df))))
colnames(train.df)<- colnames(voting.df)
train.df <- train.df[-c(1),]
valid.df <- data.frame(matrix(0, ncol = length(colnames(voting.df))))
colnames(valid.df)<- colnames(voting.df)
valid.df <- valid.df[-c(1),]
# one training set for all selected years
for(i in 1:length(voting.df$PlayerID)){
if( voting.df$Year[i] %in% year.train.index ) {
train.df <- rbind(train.df, voting.df[i,])
}
else {
valid.df <- rbind(valid.df, voting.df[i,])
}
}
# logistic regression model to predict for variable MVP
logit.reg <- glm(MVP ~ Age + G + winPct + pctGamesPlayed + MP +
PTS + TRB + AST + STL + BLK + FG. +
X3P. + FT. + WS + WS.48 + TS + raptorO +
raptorD + raptorPM + USG, data = train.df, family = "binomial")
options(scipen=999)
summary(logit.reg)
logit.reg.pred <- predict(logit.reg, train.df, type = "response")
library(caret)
confusionMatrix(as.factor(ifelse(logit.reg.pred > 0.5, 1, 0)), as.factor(train.df$MVP))
results.df <- data.frame(row.names = seq(1,length(logit.reg.pred),1))
results.df$Name <- train.df$Name
results.df$Year <- train.df$Year
results.df$Actual <- train.df$MVP
results.df$log_reg <- logit.reg.pred
results.df$log_red_pred <- as.factor(ifelse(logit.reg.pred > 0.5, 1, 0))
# create empty df for test
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
valid.results.df <- data.frame(row.names = seq(1,length(valid.df$PlayerID),1))
for(season in 1:length(year.valid.index)){
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- data.frame(order(temp.results.df$log_reg))
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
}
View(results.df)
sort(results.df$log_reg, descending = TRUE)
sort(results.df$log_reg, decreasing = TRUE)
new.df <- data.frame(sort(results.df$log_reg, decreasing = TRUE))
View(new.df)
remove(new.df)
for(season in 1:length(year.valid.index)){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- data.frame(order(temp.results.df$log_reg))
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
new.df <- results.df[order(results.df$log_reg),]
for(season in 1:length(year.valid.index)){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- temp.results.df[order(temp.results.df$log_reg),]
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
for(season in 1:length(year.valid.index)){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
print(season)
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- temp.results.df[order(temp.results.df$log_reg),]
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
for(season in year.valid.index){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
print(season)
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- temp.results.df[order(temp.results.df$log_reg),]
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
for(season in year.valid.index){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
print(season)
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- temp.results.df[order(temp.results.df$log_reg),]
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
View(temp.df)
remove(temp.df)
for(season in year.valid.index){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
print(season)
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
print()
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- temp.results.df[order(temp.results.df$log_reg),]
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
remove(temp.results.df)
remove(temp.df)
for(season in year.valid.index){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
print(season)
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- temp.results.df[order(temp.results.df$log_reg),]
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
remove(temp.results.df)
remove(temp.df)
for(season in year.valid.index){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
print(season)
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
print("here")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
temp.results.df <- temp.results.df[order(temp.results.df$log_reg),]
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
remove(temp.df)
remove(temp.results.df)
for(season in year.valid.index){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
print(season)
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
print("here")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
print("here")
temp.results.df <- temp.results.df[order(temp.results.df$log_reg),]
temp.results.df <-
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
remove(temp.results.df)
remove(temp.df)
for(season in year.valid.index){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
print(season)
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
print("here")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
print("here")
temp.results.df <- temp.results.df[order(temp.results.df$log_reg),]
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
View(valid.results.df)
remove(temp.df)
remove(valid.results.df)
valid.results.df <- data.frame(row.names = seq(1,length(valid.df$PlayerID),1))
for(season in year.valid.index){
temp.df <- data.frame(matrix(0, ncol = length(colnames(valid.df))))
colnames(temp.df)<- colnames(valid.df)
temp.df <- temp.df[-c(1),]
print(season)
for(index in 1:length(valid.df$Name)){
if(valid.df$Year[index] == season){
temp.df <- rbind(temp.df, valid.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
print("here")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
print("here")
temp.results.df <- temp.results.df[order(temp.results.df$log_reg, decreasing = TRUE),]
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
valid.results.df <- rbind(valid.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
View(results.df)
View(valid.results.df)
train.results.df <- data.frame(row.names = seq(1,length(train.df$PlayerID),1))
for(season in year.train.index){
temp.df <- data.frame(matrix(0, ncol = length(colnames(train.df))))
colnames(temp.df)<- colnames(train.df)
temp.df <- temp.df[-c(1),]
print(season)
for(index in 1:length(train.df$Name)){
if(train.df$Year[index] == season){
temp.df <- rbind(temp.df, train.df[index,])
}
}
# print("Season ", season)
temp.pred <- predict(logit.reg, temp.df, type = "response")
print("here")
temp.results.df <- data.frame(row.names = seq(1,length(temp.pred),1))
temp.results.df$Name <- temp.df$Name
temp.results.df$Year <- temp.df$Year
temp.results.df$Actual <- temp.df$MVP
temp.results.df$log_reg <- temp.pred
print("here")
temp.results.df <- temp.results.df[order(temp.results.df$log_reg, decreasing = TRUE),]
temp.results.df$log_reg_pred <- 0
temp.results.df$log_reg_pred[1] <- 1
train.results.df <- rbind(train.results.df, temp.results.df)
remove(temp.results.df)
remove(temp.df)
}
View(train.results.df)
o
confusionMatrix(as.factor(valid.results.df$log_reg_pred), as.factor(valid.df$MVP))
confusionMatrix(as.factor(valid.results.df$log_reg_pred), as.factor(valid.results.df$MVP))
confusionMatrix(as.factor(valid.results.df$log_reg_pred), as.factor(valid.results.df$Actual))
View(voting.df)
View(voting.org.df)
summary(logit.reg)
###############################################
# Simple Logistic Regression
###############################################
logit.simple.reg <- glm(MVP ~ G + winPct + MP +
AST +
X3P. + FT. + WS + WS.48 + raptorO +
raptorD + raptorPM, data = train.df, family = "binomial")
options(scipen=999)
summary(logit.simple.reg)
